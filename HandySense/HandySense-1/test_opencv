import cv2
import mediapipe as mp

# Initialize MediaPipe modules
mp_hands = mp.solutions.hands
mp_face_mesh = mp.solutions.face_mesh
mp_drawing = mp.solutions.drawing_utils

# Initialize Hand and Face models
hands = mp_hands.Hands(min_detection_confidence=0.7,
                       min_tracking_confidence=0.7)

face_mesh = mp_face_mesh.FaceMesh(
    static_image_mode=False, 
    max_num_faces=3, 
    refine_landmarks=True,  # Enables iris tracking and refines landmarks
    min_detection_confidence=0.9, 
    min_tracking_confidence=0.9
)

# Start video capture
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    
    # Flip the frame horizontally for a mirror effect
    frame = cv2.flip(frame, 1)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    
    # Process hands and face
    hand_results = hands.process(rgb_frame)
    face_results = face_mesh.process(rgb_frame)

    # Draw hand landmarks
    if hand_results.multi_hand_landmarks:
        for hand_landmarks in hand_results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(frame, hand_landmarks, 
                                      mp_hands.HAND_CONNECTIONS,
                                      mp_drawing.DrawingSpec(color=(0, 255, 0), 
                                                             thickness=2, 
                                                             circle_radius=3),
                                      mp_drawing.DrawingSpec(color=(0, 0, 255), 
                                                             thickness=2))

    # Draw face landmarks
    if face_results.multi_face_landmarks:
        for face_landmarks in face_results.multi_face_landmarks:
            mp_drawing.draw_landmarks(
                frame, face_landmarks, 
                mp_face_mesh.FACEMESH_TESSELATION,  
                mp_drawing.DrawingSpec(color=(255, 0, 0), 
                                       thickness=1, circle_radius=1),
                mp_drawing.DrawingSpec(color=(0, 255, 0), thickness=1))

    # Display the output
    cv2.imshow("Hand & Face Tracking", frame)
    
    # Exit on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
